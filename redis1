import * as AWS from 'aws-sdk';
import * as Redis from 'ioredis';

const elasticache = new AWS.ElastiCache();

export const handler = async (event: any, context: any): Promise<any> => {
    try {
        const describeParams: AWS.ElastiCache.Types.DescribeCacheClustersMessage = {
            CacheClusterId: 'your-cluster-id'
        };

        const describeResponse = await elasticache.describeCacheClusters(describeParams).promise();
        const configEndpoint = describeResponse.CacheClusters[0].ConfigurationEndpoint!.Address;

        const client = new Redis({
            port: 6379,
            host: configEndpoint,
        });

        await client.connect();

        console.log("Connected to ElastiCache successfully");

        client.disconnect();

        return {
            statusCode: 200,
            body: "Connected to ElastiCache successfully",
        };
    } catch (error) {
        console.error("Error:", error);
        return {
            statusCode: 500,
            body: "Failed to connect to ElastiCache",
        };
    }
};
